# Spring Boot configuration
spring:
  security:
    oauth2:
      #      resource:
      #        user-info-uri: https://api.github.com/user
      ##      client:
      ##        registration:
      ##          google:
      #            client-id: 187728350524-5rnp1tm4v08e9f4tncdjurqge9jm4tce.apps.googleusercontent.com
      #            client-secret: fxonat-cfNpttuLxGovEyruj
      #            redirectUri: "http://localhost:8080/loginSuccess"
      #          facebook:
      #            client-id: 242340783448984
      #            client-secret: a247b468f7125a83932d141a10069144
      #            redirectUri: "http://localhost:8080/loginSuccess"
      #            scope: user_posts
      client:
        registration:
          github:
            client-id: 62e8ccdd4cf568d81d70
            client-secret: fa24169e2d99a188e390bbfdd6bf734c99829623
              #            access-token-uri: https://github.com/login/oauth/access_token
              #            user-authorization-uri: https://github.com/login/oauth/authorize
            #            scope: read:user,user:email
          google:
            client-id: 187728350524-5rnp1tm4v08e9f4tncdjurqge9jm4tce.apps.googleusercontent.com
            client-secret: fxonat-cfNpttuLxGovEyruj

  thymeleaf:
    cache: false
  # Server configuration
  server:
    servlet:
      sesssion:
        timeout: 1m
    port: 8080
    error:
      whitelabel:
        enabled: false


  output:
    ansi:
      enabled: ALWAYS

  # Database
  datasource:
    initialization-mode: never
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: root

  # JPA properties
  jpa:
    # Show or not log for each sql query
    show_sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Logging
logging:
  level:
    root: INFO
    org.springframework.web: ERROR
    com.example: DEBUG
    org.hibernate: ERROR


# following constants are for validation of various Json inputs and Exception handling.
ALPHA_NUMERIC_REGEX: ^[ a-zA-Z0-9]*$

# following messages are for the core classes.
CODE_MAX_LENGTH: 10
COMPANY_CODE_MAX_LENGTH: 10
DIVISION_CODE_MAX_LENGTH: 10
WAREHOUSE_CODE_MAX_LENGTH: 10
CHANNEL_CODE_MAX_LENGTH: 10
CHANNEL_NAME_MAX_LENGTH: 20
MANUFACTURING_PLANT_CODE_MAX_LENGTH: 10